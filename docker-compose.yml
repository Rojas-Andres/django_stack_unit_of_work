version: '3'

services:
  redis:
    image: redis:alpine
  postgres:
    image: postgres:13
    command: postgres -c log_statement=all
    ports:
      - ${POSTGRES_PORT_COMPOSE_EXPORT}:5432
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  # celery-worker:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.dev
  #   environment:
  #     - PIP_DEFAULT_TIMEOUT=100
  #     - DATABASE=postgres
  #   env_file:
  #     - ./.envrc
  #   volumes:
  #     - ./src:/project_django/src
  #     - ./config:/project_django/config
  #     - ./tests:/tests
  #     - ${HOME}/.aws:/home/user/.aws:ro
  #     - ${HOME}/.gitconfig:/home/user/.gitconfig:ro
  #     - ${HOME}/.ssh:/home/user/.ssh:ro
  #   depends_on:
  #     - postgres
  #   command: celery -A src.messaging.app worker -l info

  # celery_beat:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.dev
  #   environment:
  #     - PIP_DEFAULT_TIMEOUT=100
  #     - DATABASE=postgres
  #   env_file:
  #     - ./.envrc
  #   volumes:
  #     - ./src:/project_django/src
  #     - ./config:/project_django/config
  #     - ${HOME}/.aws:/home/user/.aws:ro
  #     - ${HOME}/.gitconfig:/home/user/.gitconfig:ro
  #     - ${HOME}/.ssh:/home/user/.ssh:ro
  #   depends_on:
  #     - postgres
  #   command: celery -A src.messaging.app beat -l info

  worker:
    tty: true
    stdin_open: true
    build:
      context: .
      dockerfile: Dockerfile.dev
    environment:
      - PIP_DEFAULT_TIMEOUT=100
      - DATABASE=postgres
    env_file:
      - ./.envrc
    ports:
      - '8000:8000'
    volumes:
      - ./src:/project_django/src
      - ./communication:/project_django/communication
      - ./django_apps:/project_django/django_apps
      - ./django_project:/project_django/django_project
      - ./shared:/project_django/shared
      - ${HOME}/.aws:/home/user/.aws:ro
      - ${HOME}/.gitconfig:/home/user/.gitconfig:ro
      - ${HOME}/.ssh:/home/user/.ssh:ro
    depends_on:
      - postgres

volumes:
  postgres_data:
